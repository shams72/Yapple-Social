stages:
  - build
  - test
  - commit 
  - deploy

build-backend-dev:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/dockerfile/backend.dev.dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:backend"

build-frontend-containter:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/frontend"
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile/frontend.production.dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:frontend"


save-app-to-artifacts : 
  stage: build
  image : "${CI_REGISTRY_IMAGE}:frontend"
  before_script:
    - apk add openssh rsync
  script: 
    - cd frontend
    - npm install 
    - npm run build
    - echo "$AWS_SECRET_ACCESS_KEY" | base64 -d  > myKey.pem
    - chmod 700 myKey.pem
    - rsync -avz -e "ssh -i myKey.pem -o StrictHostKeyChecking=no" dist/* ec2-user@ec2-13-60-18-228.eu-north-1.compute.amazonaws.com:/home/ec2-user/frontend/www
  only:
    - main  
  needs:
    - build-frontend-containter
  artifacts:
    paths:
      - frontend/dist

test:
  stage: test
  image: "${CI_REGISTRY_IMAGE}:backend"
  dependencies:
    - build-backend-dev
  before_script :
    - cd backend
    - npm install 
    - npm run dev & 
  services:
    - name: mongo:latest
      alias: mongo
      variables:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: ganzGeheim
  variables:
    DATABASE_URL: "mongodb://root:ganzGeheim@mongo:27017"
    SECRET_KEY: "ganzGeheim"
    TOKEN_SECRET: "ganzGeheim"
  script:
    - npm run test:coverage
  
  coverage: '/All files\s+\|\s+([\d\.]+)\s+\|/'
  artifacts:
    paths:
      - backend/coverage/lcov-report/


deploy-backend : 
  stage: deploy
  image: ubuntu
  before_script:
    - apt-get update && apt-get install -y openssh-client
  script:
    - echo "$AWS_SECRET_ACCESS_KEY" | base64 -d  > myKey.pem
    - chmod 700 myKey.pem
    - ssh -o StrictHostKeyChecking=no -i "myKey.pem" ec2-user@ec2-13-60-18-228.eu-north-1.compute.amazonaws.com  "cd /home/ec2-user/api-yapple/&& ./script1.sh"
  needs:
    - build-backend-dev
  only:
    - main  

pages:
  stage: deploy
  script:
    - mkdir -p public/test-details
    - mkdir -p public
    - cp -r backend/coverage/lcov-report/* public/test-details/
    - cp -r frontend/dist/* public
  artifacts:
    paths:
      - public 
  needs:
    - save-app-to-artifacts
    - test
  only:
    - main